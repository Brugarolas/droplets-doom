class GibletA : Droplets
{
	action void A_Drip()
	{
		let droplet = BloodDroplet(Actor.Spawn('BloodDroplet',invoker.pos + (frandom(-1.5,1.5),frandom(-1.5,1.5),0)));
		droplet.final_scale = frandom(0.5,1.0);
		droplet.scale = (droplet.final_scale, droplet.final_scale) * 0.25;
		droplet.vel = invoker.vel;
		droplet.translation = invoker.translation;
	}
	
	Default
	{
		+MISSILE
		+FLOORCLIP
		+BOUNCEONWALLS
		+FORCEXYBILLBOARD
		+NOBLOCKMAP
		+MOVEWITHSECTOR
		+THRUACTORS
		BounceFactor 0.15;
		Gravity 0.667;
		Radius 2;
		Height 4;
		DeathHeight 4;
		Speed 4;
		Droplets.SnapToFloor false;
	}
	States
	{
	Spawn:
		TNT1 A 0;
		GIBL A random(7,18) A_Drip;
		Wait;
	Death:
		"----" A -1 A_FloorSplat(1.0);
		Stop;
	}
}

class GibletB : GibletA
{
	States
	{
	Spawn:
		TNT1 A 0;
		GIBL B random(7,18) A_Drip;
		Wait;
	}
}

class GibletC : GibletA
{
	States
	{
	Spawn:
		TNT1 A 0;
		GIBL C random(7,18) A_Drip;
		Wait;
	}
}

class GibletD : GibletA
{
	States
	{
	Spawn:
		TNT1 A 0;
		GIBL D random(7,18) A_Drip;
		Wait;
	}
}

class GibletE : GibletA
{
	States
	{
	Spawn:
		TNT1 A 0;
		GIBL E random(7,18) A_Drip;
		Wait;
	}
}

class GibletF : GibletA
{
	States
	{
	Spawn:
		TNT1 A 0;
		GIBL F random(7,18) A_Drip;
		Wait;
	}
}

class GibletG : GibletA
{
	States
	{
	Spawn:
		TNT1 A 0;
		GIBL G random(7,18) A_Drip;
		Wait;
	}
}

class GibletH : GibletA
{
	States
	{
	Spawn:
		TNT1 A 0;
		GIBL H random(7,18) A_Drip;
		Wait;
	}
}

class GibletI : GibletA
{
	States
	{
	Spawn:
		TNT1 A 0;
		GIBL I random(7,18) A_Drip;
		Wait;
	}
}

class GibletJ : GibletA
{
	States
	{
	Spawn:
		TNT1 A 0;
		GIBL J random(7,18) A_Drip;
		Wait;
	}
}

class GibletK : GibletA
{
	States
	{
	Spawn:
		TNT1 A 0;
		GIBL K random(7,18) A_Drip;
		Wait;
	}
}

class GibletL : GibletA
{
	States
	{
	Spawn:
		TNT1 A 0;
		GIBL L random(7,18) A_Drip;
		Wait;
	}
}

class GibletM : GibletA
{
	States
	{
	Spawn:
		TNT1 A 0;
		GIBL M random(7,18) A_Drip;
		Wait;
	}
}

class RandGiblet : GibletA
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_Jump(236,1,2,3,4,5,6,7,8,9,10,11,12,13);
		GIBL A 0 A_Jump(256,13);
		GIBL B 0 A_Jump(256,12);
		GIBL C 0 A_Jump(256,11);
		GIBL D 0 A_Jump(256,10);
		GIBL E 0 A_Jump(256,9);
		GIBL F 0 A_Jump(256,8);
		GIBL G 0 A_Jump(256,7);
		GIBL H 0 A_Jump(256,6);
		GIBL I 0 A_Jump(256,5);
		GIBL J 0 A_Jump(256,4);
		GIBL K 0 A_Jump(256,3);
		GIBL L 0 A_Jump(256,2);
		GIBL M 0;
		"----" A random(7,18) A_Drip;
		Wait;
	}
}

class GibSpray : Droplets
{
	action void A_DropletsGib(class<Actor> type)
	{
		let giblet = Actor.Spawn(type,(invoker.pos.x, invoker.pos.y, invoker.pos.z + 8));
		giblet.Vel3DFromAngle(frandom(4,8),frandom(0,360),frandom(-90,-45));
		giblet.vel += invoker.vel * 0.5;
		giblet.translation = invoker.translation;
	}
	
	Default
	{
		+NOGRAVITY
		+NOBLOCKMAP
		+THRUACTORS
		+NOTELEPORT
	}
	States
	{
	Spawn:
		TNT1 A 0 NoDelay
		{
			A_DropletsGib("GibletA");
			A_DropletsGib("GibletB");
			A_DropletsGib("GibletC");
			A_DropletsGib("GibletD");
			A_DropletsGib("GibletE");
			A_DropletsGib("GibletF");
			A_DropletsGib("GibletG");
			A_DropletsGib("GibletH");
			A_DropletsGib("GibletI");
			A_DropletsGib("GibletJ");
			A_DropletsGib("GibletK");
			A_DropletsGib("GibletL");
			A_DropletsGib("GibletM");
			A_FloorSplat(3.0);
		}
		Stop;
	}
}